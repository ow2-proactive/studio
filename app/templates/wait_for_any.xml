<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:proactive:jobdescriptor:3.12"
	xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd"
	name="Wait_For_Any" priority="normal" onTaskError="continueJobExecution"
	maxNumberOfExecution="2">
	<description>
    <![CDATA[ Execute processing tasks, and wait for one task from the taskNames list to finish before continuing. ]]>
	</description>
	<genericInformation>
		<info name="workflow.icon"
			value="/automation-dashboard/styles/patterns/img/wf-icons/controls_wait_for_any.png" />
	</genericInformation>
	<taskFlow>
		<task name="Wait_For_Task">
			<genericInformation>
				<info name="task.icon"
					value="/automation-dashboard/styles/patterns/img/wf-icons/controls_wait_for_any.png" />
			</genericInformation>
			<variables>
				<variable name="taskNames" value="Process_1,Process_2,Process_3"
					inherited="false" />
			</variables>
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
schedulerapi.connect()

def job_id = variables["PA_JOB_ID"]
def task_names_list = variables["taskNames"].split(",") as List
def time_out_in_sec = 30

println "(waiting for a task in " + task_names_list + " to finish)"
schedulerapi.waitForAnyTask(job_id, task_names_list, time_out_in_sec * 1000)

variables["isFinished"] = "true"
]]>
					</code>
				</script>
			</scriptExecutable>
			<controlFlow>
				<loop target="Wait_For_Task">
					<script>
						<code language="javascript">
              <![CDATA[
// You can use a Cron Expression here
              // examples http://www.sauronsoftware.it/projects/cron4j/manual.php#p02
if(!variables.get("isFinished")){
	loop = '* * * * *';
}else{
	loop = false;
}
]]>
						</code>
					</script>
				</loop>
			</controlFlow>
		</task>
		<task name="Next_Process">
			<genericInformation>
				<info name="task.icon"
					value="/automation-dashboard/styles/patterns/img/wf-icons/controls_wait_for_any.png" />
			</genericInformation>
			<depends>
				<task ref="Wait_For_Task" />
			</depends>
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
println "... " + variables.get("PA_TASK_NAME")
]]>
					</code>
				</script>
			</scriptExecutable>
		</task>
		<task name="Process_1">
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
def sleep_duration_in_sec = (new Random().nextInt(30-10)+10)

println variables.get("PA_TASK_NAME") + " ... (sleep during " + sleep_duration_in_sec + " seconds) ..."

sleep(sleep_duration_in_sec * 1000)
]]>
					</code>
				</script>
			</scriptExecutable>
		</task>
		<task name="Process_2">
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
def sleep_duration_in_sec = (new Random().nextInt(30-10)+10)

println variables.get("PA_TASK_NAME") + " ... (sleep during " + sleep_duration_in_sec + " seconds) ..."

sleep(sleep_duration_in_sec * 1000)
]]>
					</code>
				</script>
			</scriptExecutable>
		</task>
		<task name="Process_3">
			<scriptExecutable>
				<script>
					<code language="groovy">
            <![CDATA[
def sleep_duration_in_sec = (new Random().nextInt(30-10)+10)

println variables.get("PA_TASK_NAME") + " ... (sleep during " + sleep_duration_in_sec + " seconds) ..."

sleep(sleep_duration_in_sec * 1000)
]]>
					</code>
				</script>
			</scriptExecutable>
		</task>
	</taskFlow>
</job>