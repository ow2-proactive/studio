<?xml version="1.0" encoding="UTF-8"?>
<job xmlns="urn:proactive:jobdescriptor:3.3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.3 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.3/schedulerjob.xsd"
     name="03_java_tasks_PI" priority="normal" cancelJobOnError="true">
    <description>Computing PI according to MonteCarlo method. This job will launch 6 MonteCarlo
        tasks, then 2 tasks will average 3 results each. So a last task will average the 2 last
        results. Finally this last task will be the final result.</description>
    <taskFlow>
        <task name="Computation1">
            <description>Compute Pi and return it</description>
            <javaExecutable class="org.ow2.proactive.scheduler.examples.MonteCarlo">
                <parameters>
                    <parameter name="steps" value="20"/>
                    <parameter name="iterations" value="100000000"/>
                </parameters>
            </javaExecutable>
        </task>
        <task name="Computation2">
            <description>Compute Pi and return it</description>
            <javaExecutable class="org.ow2.proactive.scheduler.examples.MonteCarlo">
                <parameters>
                    <parameter name="steps" value="20"/>
                    <parameter name="iterations" value="100000000"/>
                </parameters>
            </javaExecutable>
        </task>
        <task name="Computation3">
            <description>Compute Pi and return it</description>
            <javaExecutable class="org.ow2.proactive.scheduler.examples.MonteCarlo">
                <parameters>
                    <parameter name="steps" value="20"/>
                    <parameter name="iterations" value="100000000"/>
                </parameters>
            </javaExecutable>
        </task>
        <task name="Computation4">
            <description>Compute Pi and return it</description>
            <javaExecutable class="org.ow2.proactive.scheduler.examples.MonteCarlo">
                <parameters>
                    <parameter name="steps" value="20"/>
                    <parameter name="iterations" value="100000000"/>
                </parameters>
            </javaExecutable>
        </task>
        <task name="Computation5">
            <description>Compute Pi and return it</description>
            <javaExecutable class="org.ow2.proactive.scheduler.examples.MonteCarlo">
                <parameters>
                    <parameter name="steps" value="20"/>
                    <parameter name="iterations" value="100000000"/>
                </parameters>
            </javaExecutable>
        </task>
        <task name="Computation6">
            <description>Compute Pi and return it</description>
            <javaExecutable class="org.ow2.proactive.scheduler.examples.MonteCarlo">
                <parameters>
                    <parameter name="steps" value="20"/>
                    <parameter name="iterations" value="100000000"/>
                </parameters>
            </javaExecutable>
        </task>
        <task name="Average1">
            <description>Do the average of 1 2 3 and return it.</description>
            <depends>
                <task ref="Computation1"/>
                <task ref="Computation2"/>
                <task ref="Computation3"/>
            </depends>
            <javaExecutable
                    class="org.ow2.proactive.scheduler.examples.MonteCarloAverage"/>
        </task>
        <task name="Average2">
            <description>Do the average of 4 5 6 and return it.</description>
            <depends>
                <task ref="Computation4"/>
                <task ref="Computation5"/>
                <task ref="Computation6"/>
            </depends>
            <javaExecutable
                    class="org.ow2.proactive.scheduler.examples.MonteCarloAverage"/>

        </task>
        <task name="LastAverage" preciousResult="true">
            <!-- Task human description -->
            <description>Do the average of average 1 2 and return it.</description>
            <depends>
                <task ref="Average1"/>
                <task ref="Average2"/>
            </depends>
            <javaExecutable
                    class="org.ow2.proactive.scheduler.examples.MonteCarloAverage"/>

        </task>
    </taskFlow>
</job>
